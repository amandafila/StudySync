CREATE DATABASE studysync;
USE studysync;

CREATE TABLE faculdade (
    id_faculdade INT PRIMARY KEY AUTO_INCREMENT,
    email VARCHAR(100) UNIQUE NOT NULL,
    username VARCHAR(50) NOT NULL,
    nome VARCHAR(100) UNIQUE NOT NULL,
    cnpj VARCHAR(18) UNIQUE NOT NULL,
    cep VARCHAR(9) NOT NULL,
    telefone VARCHAR(15) NOT NULL,
    senha VARCHAR(255) NOT NULL
);

CREATE TABLE aluno (
    id_aluno INT PRIMARY KEY AUTO_INCREMENT,
    email VARCHAR(100) UNIQUE NOT NULL,
    username VARCHAR(50) NOT NULL,
    nome VARCHAR(100) NOT NULL,
    cpf VARCHAR(14) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    faculdade VARCHAR(100) NOT NULL,
    FOREIGN KEY (faculdade) REFERENCES faculdade(nome)
);

CREATE TABLE grupo (
    id_grupo INT PRIMARY KEY AUTO_INCREMENT,
    id_faculdade INT NOT NULL,
    nome VARCHAR(50) NOT NULL,
    descricao VARCHAR(1000),
    FOREIGN KEY (id_faculdade) REFERENCES faculdade(id_faculdade) ON DELETE CASCADE
);

CREATE TABLE grupo_aluno (
    id_grupo INT NOT NULL,
    id_aluno INT NOT NULL,
    is_adm TINYINT(1) NOT NULL DEFAULT 0,
    PRIMARY KEY (id_grupo, id_aluno),
    FOREIGN KEY (id_grupo) REFERENCES grupo(id_grupo) ON DELETE CASCADE,
    FOREIGN KEY (id_aluno) REFERENCES aluno(id_aluno) ON DELETE CASCADE
);

CREATE TABLE solicitacao_grupo (
    id_solicitacao INT PRIMARY KEY AUTO_INCREMENT,
    id_grupo INT NOT NULL,
    id_aluno INT NOT NULL,
    mensagem TEXT,
    data_solicitacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('pendente', 'aprovado', 'rejeitado') DEFAULT 'pendente',
    FOREIGN KEY (id_grupo) REFERENCES grupo(id_grupo) ON DELETE CASCADE,
    FOREIGN KEY (id_aluno) REFERENCES aluno(id_aluno) ON DELETE CASCADE
);

CREATE TABLE forum_geral (
    id_post INT PRIMARY KEY AUTO_INCREMENT,
    id_grupo INT NOT NULL,
    id_aluno INT NOT NULL,
    mensagem TEXT NOT NULL,
    data_postagem TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_grupo) REFERENCES grupo(id_grupo) ON DELETE CASCADE,
    FOREIGN KEY (id_aluno) REFERENCES aluno(id_aluno) ON DELETE CASCADE
);

CREATE TABLE forum_admins (
    id_post INT PRIMARY KEY AUTO_INCREMENT,
    id_grupo INT NOT NULL,
    id_aluno INT NOT NULL,
    titulo VARCHAR(100) NOT NULL,
    mensagem TEXT NOT NULL,
    data_postagem TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_grupo) REFERENCES grupo(id_grupo) ON DELETE CASCADE,
    FOREIGN KEY (id_aluno) REFERENCES aluno(id_aluno) ON DELETE CASCADE
);

ALTER TABLE forum_geral ADD COLUMN id_resposta INT NULL AFTER id_aluno;
ALTER TABLE forum_geral ADD FOREIGN KEY (id_resposta) REFERENCES forum_geral(id_post);

ALTER TABLE forum_admins ADD COLUMN id_resposta INT NULL AFTER id_aluno;
ALTER TABLE forum_admins ADD FOREIGN KEY (id_resposta) REFERENCES forum_admins(id_post);
CREATE TABLE denuncias (
    id_denuncia INT AUTO_INCREMENT PRIMARY KEY,
    id_post INT NOT NULL,
    id_aluno INT NOT NULL,
    tipo_forum ENUM('geral', 'admins') NOT NULL,
    data_hora TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE forum_geral ADD COLUMN arquivo VARCHAR(255) NULL AFTER mensagem;

CREATE TABLE vagas (
    id INT AUTO_INCREMENT PRIMARY KEY,
    titulo VARCHAR(100) NOT NULL,
    empresa VARCHAR(100) NOT NULL,
    descricao TEXT NOT NULL,
    requisitos TEXT,
    localizacao VARCHAR(100),
    link VARCHAR(100),
    data_postagem TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE vagas
add COLUMN faculdade VARCHAR(100) NOT NULL,
ADD FOREIGN KEY (faculdade) REFERENCES faculdade(nome);
ALTER TABLE aluno ADD COLUMN chave_recuperacao_hash VARCHAR(255);